<div id="top-container" class="covering-main-page">
	<div id="global-header">
        <div class="global-bar">
             <nav role="navigation">                 
                 <h1 class="logo">
                     <a href="/"><img src="/assets/RORD_logo.png" width="350" height="30" data-retina /></a>
                 </h1>                 
                 <ul id="global-navigation" class="main" role="navigation">
					<li><%= link_to 'Projects', projects_path %></li>
					<li><%= link_to 'About', about_path %></li>
				  <% if user_signed_in? %>
						<% if current_user.has_role? :admin %>
							<li><%= link_to 'Experience', posts_path %></li>					
					    <% end %>
					<li><%= link_to current_user.email, edit_user_registration_path %></li>
				  <% else %>
					<li><%= link_to 'Login', new_user_session_path %></li>
				  <% end %>	
                 </ul>                
             </nav>
         </div>
     </div>
	<div id="feature-area">
		<%= link_to 'Make Contact', contact_path, :class => "float-right action-button", :style => "margin-top: 6px;" %>
		<h1>Focused on Innovative Solutions</h1>
	</div>	
</div>



<div id="container">
	<div class="main-page" id="blog-page">
		<div class="content flush-padding">
			<div class="columns">
				<div class="cell width-8 first vertical-gap">
					<div class="blog-posts ">
						
<article id="post-2850" class="post-2850 post type-post status-publish format-standard hentry category-awesome category-monotouch category-news">
<hgroup>
	
	<header>November 20, 2012</header>
	
<h2>Create a Hosted Cloud Solution in 10 steps</h2>
	<footer>By Andy</footer>
</hgroup>
<div class="entry-content rich-content">
<p>I plan to present how simple and lightweight rails is to a current Microsoft Shop. My plan is to run through a very quick example using scaffolding, github and Heroku. Here are the steps:</p>

<pre>
1. Create the basic rails app
	- rails new new_app
2. Create a TextMate project for new_app
	- mate new_app
3. Generate the scaffold with simple data fields
	- rails g scafold emp name:string age:integer salary:decimal
4. Run Migration
	- rake db:migrate
5. Delete the public/index.html
6. Update routes
	- set root to emp#index
7. Install the bundle of gems
	- bundle install
8. Test locally
	- rails s
9. Prepare database for PG on Heroku
	- add to following to gemfile

	group :production do
	gem 'pg'
	end
	group :development, :test do
	gem 'sqlite3'
	end

10. Create a git repo

	git init
	git add .
	git commit -a -m "whatever comments"
	git remote add origin git@github.com:andydenenberg/ajax_hw.git
	git push origin master

11. Push up to Heroku

	heroku create
	heroku rename appname
	git push heroku master
	heroku rake db:migrate

12. heroku open - Thats it!
</pre>

</div>
</article>


<article>
<hgroup>
	<header>November 20, 2012</header>
	
<h2>Download Database and User Created Content</h2>
	<footer>By Andy</footer>
</hgroup>
<div class="entry-content rich-content">
<p>Here is a rake task that downloads a production database and user created (uploaded) content:</p>

<p>Production Server URL: www.example.com</p>

<pre>
require "net/ssh"
require "net/scp"

namespace :sync do
  desc "Copy production database to local development directory"
  task :from_prod => :environment do
	url = 'www.example.com
    puts "** DANGER ** You are about to replace your database and public/system folder"
    t = Time.now
    db_dump_file_name = "dumpfile#{t.to_i}.sql"
    tar_name = "#{t.to_i}.tar.gz"
    tmp_system = "/tmp/#{tar_name}"

    Net::SSH.start(url, 'ubuntu') do |ssh|
      puts "Dumping database remotely into /tmp/#{db_dump_file_name}"
      ssh.exec! "mysqldump -u root -h localhost stc > /tmp/#{db_dump_file_name}"
      puts 'db dump complete'
      puts "tar czvf #{tmp_system} public/system"
      ssh.exec! "tar czvf #{tmp_system} --directory ~/rails/stc/public/ system"
    end

    FileUtils.rm_rf tmp_system if File.exists? tmp_system
    Net::SCP.start(url, 'ubuntu') do |scp|
      puts "Downloading database to your /tmp."
      scp.download("/tmp/#{db_dump_file_name}", "/tmp")
      puts "Downloading system tar gz folder to your /tmp."
      scp.download(tmp_system, "/tmp")
    end

    Net::SSH.start(url, 'ubuntu') do |ssh|
      puts "Removing remote database dump"
      ssh.exec! "rm -f /tmp/#{db_dump_file_name}"
      puts "Removing remote tar gz file"
      ssh.exec! "rm -f #{tmp_system}"
    end

    puts "Uncompressing system tar gz."
    `tar xzvf /tmp/#{tar_name} --directory public/system`    
    puts "Loading database (The dump file remains in /tmp)"
    `mysql -u root -h localhost stc < /tmp/#{db_dump_file_name}`

  end

end

</pre>

</div>
</article>



<article>
<hgroup>
	<header>November 20, 2012</header>
	
<h2>Download Database and User Created Content</h2>
	<footer>By Andy</footer>
</hgroup>
<div class="entry-content rich-content">

<p>What you want to do is use separate manifest files to break things up. First you have to re-organize your app/assets/stylesheets folder:</p>

<pre>



app/assets/stylesheets
+-- all
    +-- your_base_stylesheet.css
+-- print
    +-- blueprint
        +-- print.css
    +-- your_print_stylesheet.css
+-- ie
    +-- blueprint
        + ie.css
    +-- your_ie_hacks.css
+-- application-all.css
+-- application-print.css
+-- application-ie.css
Then you edit the three manifest files:

/**
 * application-all.css
 *
 *= require_self
 *= require_tree ./all
 */

/**
 * application-print.css
 *
 *= require_self
 *= require_tree ./print
 */

/**
 * application-ie.css
 *
 *= require_self
 *= require_tree ./ie
 */
Next you update your application layout file:

< %= stylesheet_link_tag "application-all", :media => "all" %>
< %= stylesheet_link_tag "application-print", :media => "print" %>

< !--[if lte IE 8]>
    < %= stylesheet_link_tag "application-ie", :media => "all" %>
<! [endif]-->
Lastly, don't forget to include these new manifest files in your config/environments/production.rb:

config.assets.precompile += %w( application-all.css application-print.css application-ie.css )

</pre>

</div>
</article>





																						<div class="navigation">
									<div class="nav-previous"><a href="#" ><span class="meta-nav">&larr;</span> Older posts</a></div>
									<div class="nav-next"></div>
								</div>
					</div>
				</div>
				<div class="blog-sidebar cell width-4 append-gutter vertical-gap" >
					<div id="secondary" class="widget-area" role="complementary">
						
<aside class="widget s2_form_widget"><form method="get" action="#">
<%= text_field_tag 'search', "Search" %>
</form>
</aside>

<aside class="widget s2_form_widget"><h3 class="widget-title">Subscribe</h3><div class="search">

	<%= simple_form_for(@user,  :url => registration_path(@user), :html => {:class => 'form-vertical' }) do |f| %>
	  <%= f.error_notification %>
	  <%= f.input :email, :required => true, :placeholder => "Enter email address..."  %>
	  <%= f.button :submit, 'Sign up' %>
	
	<% end %>

</aside>

<aside id="linkcat-2" class="widget widget_links"><h3 class="widget-title">Links</h3>
	<ul class='xoxo blogroll'>
<li><%= link_to 'Rails Guide', 'http://guides.rubyonrails.org/'%>
<li><%= link_to 'Family Site', 'http://www.denenberg.net'%></li>
	</ul>
</aside>
</div>
				</div>
			</div>
		</div>
	</div>
